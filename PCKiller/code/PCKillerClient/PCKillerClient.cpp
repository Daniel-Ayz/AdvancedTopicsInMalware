#include <windows.h>
#include <stdio.h>
#include <string>

#define IOCTL_SET_SHUTDOWN_TIMER CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CANCEL_SHUTDOWN_TIMER CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_QUERY_REMAINING_TIME CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)

int wmain(int argc, wchar_t* argv[]) {
    if (argc < 2) {
        printf("Usage: \npckiller.exe -shutdown <seconds>\npckiller.exe –cancel\npckiller.exe –remaining\n");
        return 1;
    }

    HANDLE hDevice = CreateFile(L"\\\\.\\PCKiller", GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hDevice == INVALID_HANDLE_VALUE) {
        printf("Failed to open device\n");
        return 1;
    }

    std::wstring action = argv[1];
    if (action == L"-shutdown" && argc == 3) {
        int seconds = _wtoi(argv[2]);
        printf("-shutdown %d\n", seconds);

        DeviceIoControl(hDevice, IOCTL_SET_SHUTDOWN_TIMER, &seconds, sizeof(seconds), NULL, 0, NULL, NULL);
    }
    else if (action == L"-cancel") {
        printf("-cancel\n");
        DeviceIoControl(hDevice, IOCTL_CANCEL_SHUTDOWN_TIMER, NULL, 0, NULL, 0, NULL, NULL);
    }
    else if (action == L"-remaining") {
        printf("-remaining\n");
        int remaining;
        DeviceIoControl(hDevice, IOCTL_QUERY_REMAINING_TIME, NULL, 0, &remaining, sizeof(remaining), NULL, NULL); 
        printf("Remaining time: %d seconds\n", remaining);
    }
    else {
        printf("Invalid command\n");
        CloseHandle(hDevice);
        return 1;
    }

    CloseHandle(hDevice);
    return 0;
}
